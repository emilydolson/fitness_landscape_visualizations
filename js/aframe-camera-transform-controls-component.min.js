!function(t){function e(n){if(i[n])return i[n].exports;var o=i[n]={exports:{},id:n,loaded:!1};return t[n].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e){function i(t,e){var i,o;return i=t.angleTo(e),o=t.clone().cross(e),n.dot(o)<0&&(i=-i),i}if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("hint-scale",{schema:{rightEl:{type:"selector"},leftEl:{type:"selector"},text:{default:"1.0x"}},init:function(){var t=this.el;this.rightEl=this.leftEl=null;var e=this.middle=document.createElement("a-sphere"),i=this.text=document.createElement("a-entity"),n=this.line=document.createElement("a-entity");this.cameraObject=this.el.parentElement.querySelector("[camera]").object3D,t.appendChild(e),t.appendChild(i),t.appendChild(n),this.rightEl=document.getElementById("righthand"),this.leftEl=document.getElementById("lefthand"),e.setAttribute("radius","0.003"),e.setAttribute("color","#000"),n.setAttribute("line",{color:"black"}),i.setAttribute("text",{color:"black",align:"center",value:"1.0x",width:.5})},update:function(t){t.text!==this.data.text&&this.text.setAttribute("text",{value:this.data.text})},tick:function(){return function(){var t=new THREE.Vector3,e=new THREE.Vector3,i=new THREE.Vector3;if(this.el.getAttribute("visible")===!0){var n=this.leftEl.getAttribute("position"),o=this.rightEl.getAttribute("position");i.subVectors(n,o).multiplyScalar(.5).add(o),this.middle.setAttribute("position",i),i.y+=.025,this.text.setAttribute("position",i),this.text.object3D.lookAt(this.cameraObject.position),e.copy(o),t.copy(n),this.line.setAttribute("line",{start:t,end:e})}}}()});var n=new THREE.Vector3(0,1,0);AFRAME.registerComponent("camera-transform-controls",{schema:{enabled:{default:!0},cameraRigId:{default:"cameraRig"},onStart:{default:"gripdown"},onEnd:{default:"gripup"},showHint:{default:!0}},init:function(){this.cameraRigEl=document.getElementById(this.data.cameraRigId);var t=this.hintEl=document.createElement("a-entity");t.setAttribute("hint-scale",""),t.setAttribute("visible",!1),this.cameraRigEl.appendChild(t),this.currentDragCenter=new THREE.Vector3,this.panningController=null,this.controllers={left:{entity:null,dragging:!1,dragStartPoint:new THREE.Vector3},right:{entity:null,dragging:!1,dragStartPoint:new THREE.Vector3}},this.originalPosition=new THREE.Vector3,this.originalScale=new THREE.Vector3,this.originalRotation=new THREE.Vector3,this.isLeftButtonDown=!1,this.isRightButtonDown=!1,this.cameraScaleEventDetail={cameraScaleFactor:1}},update:function(t){var e=this.cameraRigEl;e&&(!t.enabled&&this.data.enabled&&(this.originalPosition.copy(e.object3D.position),this.originalScale.copy(e.object3D.scale),this.originalRotation.copy(e.object3D.rotation)),t.enabled&&!this.data.enabled&&(e.setAttribute("position",this.originalPosition),e.setAttribute("scale",this.originalScale),e.setAttribute("rotation",this.originalRotation.clone())))},tick:function(){this.hintEl.setAttribute("visible",!1),this.data.enabled&&(this.isLeftButtonDown||this.isRightButtonDown)&&(this.isLeftButtonDown&&this.isRightButtonDown?(this.twoHandInteraction(),this.hintEl.setAttribute("visible",this.data.showHint)):this.processPanning())},onButtonDown:function(t){var e,i;this.cameraRigEl.object3D&&(i=t.target,e=i===this.leftHandEl,e?(this.isLeftButtonDown=!0,this.panningController=this.controllers.left):(this.isRightButtonDown=!0,this.panningController=this.controllers.right),this.panningController.entity.object3D.getWorldPosition(this.panningController.dragStartPoint),this.released=this.isLeftButtonDown&&this.isRightButtonDown)},onButtonUp:function(t){var e,i;i=t.target,e=t.target===this.leftHandEl,e?(this.panningController=this.controllers.right,this.isLeftButtonDown=!1):(this.panningController=this.controllers.left,this.isRightButtonDown=!1),this.panningController.entity.object3D.getWorldPosition(this.panningController.dragStartPoint),this.isLeftButtonDown||this.isRightButtonDown||(this.cameraScaleEventDetail.cameraScaleFactor=this.cameraRigEl.object3D.scale.x,this.el.emit("camerascale",this.cameraScaleEventDetail)),this.released=!0},twoHandInteraction:function(){var t=new THREE.Vector3,e=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3,a=new THREE.Vector3,r=new THREE.Vector3;return function(){var s,l,c,h,d;this.leftHandEl.object3D.getWorldPosition(n),this.rightHandEl.object3D.getWorldPosition(o),this.released&&(this.prevAngle=i(n,o),this.initAngle=this.prevAngle=Math.atan2(n.x-o.x,n.z-o.z),a.copy(n).add(o).multiplyScalar(.5),this.prevDistance=r.copy(n).sub(o).length(),this.released=!1),l=e.copy(n).sub(o).length(),h=this.prevDistance-l,t.copy(this.leftHandEl.object3D.position).add(this.rightHandEl.object3D.position).multiplyScalar(.5),this.cameraRigEl.object3D.scale.addScalar(h),this.cameraRigEl.setAttribute("scale",this.cameraRigEl.object3D.scale),this.hintEl.setAttribute("hint-scale",{text:this.cameraRigEl.object3D.scale.x.toFixed(2)+"x"}),d=t.applyQuaternion(this.cameraRigEl.object3D.quaternion).multiplyScalar(h),this.cameraRigEl.object3D.position.sub(d),this.cameraRigEl.setAttribute("position",this.cameraRigEl.object3D.position),s=Math.atan2(n.x-o.x,n.z-o.z),c=s-this.prevAngle,this.rotateScene(a,c),this.prevAngle=s-c}}(),rotateScene:function(){var t=new THREE.Vector3;return function(e,i){var o,a=this.cameraRigEl;t.copy(a.object3D.position).sub(e).applyAxisAngle(n,-i),a.object3D.position.copy(e).add(t),a.setAttribute("position",a.object3D.position),o=a.getAttribute("rotation"),o.y-=i*THREE.Math.RAD2DEG,a.setAttribute("rotation",o)}}(),processPanning:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(){var i=this.panningController.dragStartPoint;this.panningController.entity.object3D.getWorldPosition(t),e.copy(i).sub(t),this.cameraRigEl.object3D.position.add(e),this.cameraRigEl.setAttribute("position",this.cameraRigEl.object3D.position)}}(),registerHand:function(t,e){this.controllers[e].entity=t,t.addEventListener(this.data.onStart,this.onButtonDown.bind(this)),t.addEventListener(this.data.onEnd,this.onButtonUp.bind(this)),"left"===e?this.leftHandEl=t:this.rightHandEl=t}}),AFRAME.registerComponent("camera-transform-controls-hand",{schema:{hand:{default:"right"}},play:function(){this.el.sceneEl.components["camera-transform-controls"].registerHand(this.el,this.data.hand)}})}]);